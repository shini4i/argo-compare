name: Run unit tests
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
env:
  GOLANG_VERSION: '1.20.1'

jobs:
  golangci:
    name: GolangCI
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GOLANG_VERSION }}
          cache: false

      - name: Install project dependencies
        run: make install-deps && make mocks

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53

  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
      - name: Fetch target branch
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}:${{ github.event.pull_request.base.ref }}

      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GOLANG_VERSION }}

      - name: Load secrets from 1Password
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          SONAR_TOKEN: op://github-actions/sonarcloud/token
          GITHUB_TOKEN: op://github-actions/github/token

      - name: Install project dependencies
        run: make install-deps

      - name: Run tests
        run: make test-coverage

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            report.xml

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v1.9.1
